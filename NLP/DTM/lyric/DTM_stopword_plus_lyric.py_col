import pandas as pd
import ast


def make_data(song,one_sns):
    csv_name=one_sns+'_refined_'+song+'.csv'
    data = pd.read_csv(csv_name,index_col=0)
    #display(data)
    return data


#한 노래,한 sns,한 키워드당 DTM값 하나 
#t:전처리 후 문자열 리스트중 하나
#d:전처리 전 문자열 리스트
def dtm(t, d):
    return d.count(t)


def get_dtm(playlist,sns):
    for song in playlist:
        sns_word_dic={}
        
        #lyric
        f=open(song+'_refined_lyric.txt','r',encoding='utf-8')
        text=f.read()
        f.close()
        text= ast.literal_eval(text)
        #print(text)
        sns_word_dic['lyric']=text
        
        
        #comment
        for one_sns in sns:
            unprocessed_words=[] #중복처리전
            comment_series=pd.Series(make_data(song,one_sns)['processed_comment'])
            for i in range(len(comment_series)):
                comment_list=ast.literal_eval(comment_series[i])
                unprocessed_words.extend(comment_list)
            sns_word_dic[one_sns]=unprocessed_words
        #지금 sns_word_dic에는 전처리전 데이터가 sns별로 dictionary화 되어있음
        #print(list(sns_word_dic.keys()))
        
        #print(sns_word_dic)
        total_words=[]
        for key in list(sns_word_dic.keys()):
            total_words.extend(sns_word_dic[key])
        print(song,'댓글 중복처리전 단어 개수:',len(total_words))
        total_words=list(set(total_words))
        print(song,'댓글 중복처리후 단어 개수: ',len(total_words))
        df=make_df(song,sns,sns_word_dic,total_words)
        df.to_csv(song+'_dtm.csv', mode='w',encoding='utf-8')
        print(df.nlargest(10,'total'))

def make_df(song,sns,sns_word_dic,total_words):
    #여기에서 lyric column누락
    #노래 한 곡, sns 리스트, sns당 복수처리전 단어 dictionary, 모든 sns 복수처리후 단어 리스트 사용
    #tf-idf처리된 DataFrame만들기
    df=pd.DataFrame(columns=sns_word_dic.keys()) #각 sns당 dictionary로 만들고 df에 추가. #행은 단어, 열은 sns
    sns_word_list=[]
    stopwords=['하다','들다','오다','좋다','올라오다','이','좀비',
               '보다','나','있다','진짜','위','되다','또','듣다',
               '다운로드','때','같다','연금','차트','곡','생각나다',
              '왜','뭐','그','노래']
    
    #sns_word_list안에 sns_word_dic 모든 내용이 list형태로 저장되어있다.
    for val in sns_word_dic.values():
        sns_word_list.append(val)
    
    #df에 dtm값 채우기
    for keyword in total_words:
        if keyword in stopwords:continue
        line=[]
        for key in list(sns_word_dic.keys()):
            if key=='lyric':line.append(dtm(keyword,sns_word_dic[key]) * 3)
            else:line.append(dtm(keyword,sns_word_dic[key]))    
        df.loc[keyword]=line
    #각 노래에서 제일 dtm 값이 큰 키워드 5개를 추출
    max_df=pd.DataFrame(df.sum(axis=1),columns=['total'])
    max_series = pd.Series(max_df['total'])
    df = pd.concat([df,max_series], axis=1)
    display(df)
    return df

########MAIN############
playlist=['벚꽃엔딩','나만,봄','꽃송이가']
sns=['youtube','melon','bugs','genie']
get_dtm(playlist,sns)
